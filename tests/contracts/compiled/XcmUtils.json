{
  "byteCode": "0x",
  "contract": {
    "abi": [
      {
        "inputs": [
          { "internalType": "bytes", "name": "message", "type": "bytes" },
          { "internalType": "uint64", "name": "maxWeight", "type": "uint64" }
        ],
        "name": "execute",
        "outputs": [],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              { "internalType": "uint8", "name": "parents", "type": "uint8" },
              {
                "internalType": "bytes[]",
                "name": "interior",
                "type": "bytes[]"
              }
            ],
            "internalType": "struct XcmUtils.Multilocation",
            "name": "multilocation",
            "type": "tuple"
          }
        ],
        "name": "multilocationToAddress",
        "outputs": [
          { "internalType": "address", "name": "account", "type": "address" }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "custom:address": "0x000000000000000000000000000000000000080C",
      "kind": "dev",
      "methods": {
        "execute(bytes,uint64)": {
          "custom:selector": "511d474e",
          "params": {
            "maxWeight": "The account the multilocation maps to in this chain",
            "message": "The multilocation that we want to know to which account maps to"
          }
        },
        "multilocationToAddress((uint8,bytes[]))": {
          "custom:selector": "343b3e00",
          "params": {
            "multilocation": "The multilocation that we want to know to which account maps to"
          },
          "returns": {
            "account": "The account the multilocation maps to in this chain"
          }
        }
      },
      "title": "Xcm Utils Interface The interface through which solidity contracts will interact with xcm utils pallet",
      "version": 1
    },
    "evm": {
      "assembly": "",
      "bytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "functionDebugData": {},
        "generatedSources": [],
        "immutableReferences": {},
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "execute(bytes,uint64)": "511d474e",
        "multilocationToAddress((uint8,bytes[]))": "343b3e00"
      }
    },
    "ewasm": { "wasm": "" },
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"maxWeight\",\"type\":\"uint64\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"parents\",\"type\":\"uint8\"},{\"internalType\":\"bytes[]\",\"name\":\"interior\",\"type\":\"bytes[]\"}],\"internalType\":\"struct XcmUtils.Multilocation\",\"name\":\"multilocation\",\"type\":\"tuple\"}],\"name\":\"multilocationToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:address\":\"0x000000000000000000000000000000000000080C\",\"kind\":\"dev\",\"methods\":{\"execute(bytes,uint64)\":{\"custom:selector\":\"511d474e\",\"params\":{\"maxWeight\":\"The account the multilocation maps to in this chain\",\"message\":\"The multilocation that we want to know to which account maps to\"}},\"multilocationToAddress((uint8,bytes[]))\":{\"custom:selector\":\"343b3e00\",\"params\":{\"multilocation\":\"The multilocation that we want to know to which account maps to\"},\"returns\":{\"account\":\"The account the multilocation maps to in this chain\"}}},\"title\":\"Xcm Utils Interface The interface through which solidity contracts will interact with xcm utils pallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(bytes,uint64)\":{\"notice\":\"Execute custom xcm message\"},\"multilocationToAddress((uint8,bytes[]))\":{\"notice\":\"Get retrieve the account associated to a given MultiLocation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"XcmUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main.sol\":{\"keccak256\":\"0x220c1ca21382ed6056e71d652cb7fa02f624e367c089a0329322cef1a06fe13e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d65c187194e749312bd1f33b2bb0166531dc5bfcbae2882a1d37be16a927386b\",\"dweb:/ipfs/QmSdqv1ho7XUr33WakXhwL2uijjBz7sKDhi3PrVm3MoeNE\"]}},\"version\":1}",
    "storageLayout": { "storage": [], "types": null },
    "userdoc": {
      "kind": "user",
      "methods": {
        "execute(bytes,uint64)": { "notice": "Execute custom xcm message" },
        "multilocationToAddress((uint8,bytes[]))": {
          "notice": "Get retrieve the account associated to a given MultiLocation"
        }
      },
      "version": 1
    }
  },
  "sourceCode": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// @title Xcm Utils Interface\n/// The interface through which solidity contracts will interact with xcm utils pallet\n/// @custom:address 0x000000000000000000000000000000000000080C\n\ninterface XcmUtils {\n    // A multilocation is defined by its number of parents and the encoded junctions (interior)\n    struct Multilocation {\n        uint8 parents;\n        bytes[] interior;\n    }\n\n    /// Get retrieve the account associated to a given MultiLocation\n    /// @custom:selector 343b3e00\n    /// @param multilocation The multilocation that we want to know to which account maps to\n    /// @return account The account the multilocation maps to in this chain\n    function multilocationToAddress(Multilocation memory multilocation)\n        external\n        view\n        returns (address account);\n\n    /// Execute custom xcm message\n    /// @custom:selector 511d474e\n    /// @param message The multilocation that we want to know to which account maps to\n    /// @param maxWeight The account the multilocation maps to in this chain\n    function execute(bytes memory message, uint64 maxWeight)\n        external\n        view;\n}\n"
}
